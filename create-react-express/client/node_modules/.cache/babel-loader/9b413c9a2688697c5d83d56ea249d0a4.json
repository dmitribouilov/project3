{"ast":null,"code":"import _regeneratorRuntime from \"/Users/davidghazi/Project3/project3/create-react-express/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"/Users/davidghazi/Project3/project3/create-react-express/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _defineProperty from \"/Users/davidghazi/Project3/project3/create-react-express/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nimport _slicedToArray from \"/Users/davidghazi/Project3/project3/create-react-express/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/davidghazi/Project3/project3/create-react-express/client/src/components/WarGame.js\";\nimport React, { useState, useEffect } from \"react\";\nimport axios from \"axios\"; //User 1 cards\n\nvar user1_deck = []; //User 1 current card drawn\n\nvar user1_card = []; //User 2 cards\n\nvar user2_deck = []; //User 2 current card drawn\n\nvar user2_card = [];\n\nfunction WarGame() {\n  var _this = this;\n\n  var _useState = useState(\"\"),\n      _useState2 = _slicedToArray(_useState, 2),\n      shuffled = _useState2[0],\n      setShuffled = _useState2[1]; // const shuffled = useState(\"\");\n\n\n  var _useState3 = useState(),\n      _useState4 = _slicedToArray(_useState3, 2),\n      updateRender = _useState4[1];\n\n  var currentDeck;\n  void shuffled; //Calls new game when the page loads\n\n  useEffect(function () {\n    newGame();\n  }, []);\n\n  function newGame() {\n    user1_deck = [];\n    user1_card = [];\n    user2_deck = [];\n    user2_card = []; //Make API call to retrieve cards for game\n\n    axios.get(\"https://deckofcardsapi.com/api/deck/new/shuffle/?deck_count=1\").then(function (result) {\n      result.data.success && console.log(\"Deck obtained\"); //Shuffle deck\n\n      setShuffled(result.data.shuffled); //Retrieve deck\n\n      currentDeck = result.data.deck_id; //Clear decks in both users hands\n\n      user1_deck = [];\n      user2_deck = []; //Make API request to evenly split cards between both users\n\n      axios.get(\"https://deckofcardsapi.com/api/deck/\".concat(currentDeck, \"/draw/?count=52\")).then(function (result) {\n        result.data.success && console.log(\"Deck is split!\");\n        var i;\n\n        for (i = 0; i < 52; i += 2) {\n          var card1 = result.data.cards[i]; //Card object to display user 1's hand\n\n          var drawnCard1 = _defineProperty({\n            value: \"\".concat(card1.value),\n            suit: \"\".concat(card1.suit),\n            imageURL: \"\".concat(card1.image),\n            cardCode: \"\".concat(card1.code)\n          }, \"imageURL\", \"\".concat(card1.image));\n\n          var card2 = result.data.cards[i + 1]; //Card object to display user 2's hand\n\n          var drawnCard2 = _defineProperty({\n            value: \"\".concat(card2.value),\n            suit: \"\".concat(card2.suit),\n            imageURL: \"\".concat(card2.image),\n            cardCode: \"\".concat(card2.code)\n          }, \"imageURL\", \"\".concat(card2.image));\n\n          user1_deck.push(drawnCard1);\n          user2_deck.push(drawnCard2);\n        } //Pushes new card to the browser\n\n\n        updateRender(function (n) {\n          return !n;\n        });\n      }).catch(function (error) {\n        return console.log(error);\n      });\n    }).catch(function (error) {\n      return console.log(error);\n    });\n  }\n\n  function deal() {\n    try {\n      //reset the pile for each player\n      user1_card = [];\n      user2_card = [];\n\n      if (!gameWon()) {\n        var player1 = user1_deck.pop();\n        var player2 = user2_deck.pop();\n\n        if (!(player1 === \"undefined\" && player2 === \"undefined\")) {\n          user1_card.push(player1);\n          user2_card.push(player2);\n          updateRender(function (n) {\n            return !n;\n          });\n          drawWinner();\n        }\n      } else {\n        gameWon();\n        updateRender(function (n) {\n          return !n;\n        });\n      }\n    } catch (e) {}\n  } //Scores for whoever wins round\n\n\n  function drawWinner() {\n    return _drawWinner.apply(this, arguments);\n  } //Create function to specify the value for A, K, Q, J\n\n\n  function _drawWinner() {\n    _drawWinner = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {\n      var user1Score, user2Score;\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              //get player card value\n              user1Score = cardValue(user1_card[user1_card.length - 1]); //get deal card value\n\n              user2Score = cardValue(user2_card[user2_card.length - 1]);\n\n              if (user1Score === user2Score) {\n                //its a tie\n                console.log('Tie');\n              } else if (user1Score > user2Score) {\n                //player wins the flip\n                console.log(\"Player 1 wins this round\");\n              } else {\n                //dealer wins\n                console.log(\"Player 2 wins this round\");\n              }\n\n            case 3:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee);\n    }));\n    return _drawWinner.apply(this, arguments);\n  }\n\n  function cardValue(card) {\n    try {\n      switch (card.value) {\n        case \"ACE\":\n          return 14;\n\n        case \"KING\":\n          return 13;\n\n        case \"QUEEN\":\n          return 12;\n\n        case \"JACK\":\n          return 11;\n\n        default:\n          return card.value;\n      }\n    } catch (e) {}\n  } //checks if either player has an empty deck\n\n\n  function gameWon() {\n    console.log(\"Player 1: \" + user1_deck.length + \" Player 2: \" + user2_deck.length);\n\n    if (user1_deck.length === 0) {\n      return true;\n    }\n\n    if (user2_deck.length === 0) {\n      return true;\n    }\n\n    return false;\n  }\n\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 158,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 159,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 160,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"button\", {\n    onClick: deal,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 161,\n      columnNumber: 11\n    }\n  }, \"Hit\"), /*#__PURE__*/React.createElement(\"button\", {\n    onClick: newGame,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 162,\n      columnNumber: 11\n    }\n  }, \"New Game\"))), /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 167,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    type: \"player\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 168,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"h2\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 169,\n      columnNumber: 11\n    }\n  }, \"Player 1\"), user1_card && user1_card.map(function (card, index) {\n    return /*#__PURE__*/React.createElement(\"img\", {\n      key: \"player\".concat(index),\n      src: \"\".concat(card.imageURL),\n      alt: \"\".concat(card.value, \" of \").concat(card.suit),\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 173,\n        columnNumber: 17\n      }\n    });\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 181,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"h2\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 182,\n      columnNumber: 11\n    }\n  }, \"Player 2\"), user2_card && user2_card.map(function (card, index) {\n    return /*#__PURE__*/React.createElement(\"img\", {\n      key: \"dealer\".concat(index),\n      src: \"\".concat(card.imageURL),\n      alt: \"\".concat(card.value, \" of \").concat(card.suit),\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 186,\n        columnNumber: 17\n      }\n    });\n  })))));\n}\n\nexport default WarGame;","map":{"version":3,"sources":["/Users/davidghazi/Project3/project3/create-react-express/client/src/components/WarGame.js"],"names":["React","useState","useEffect","axios","user1_deck","user1_card","user2_deck","user2_card","WarGame","shuffled","setShuffled","updateRender","currentDeck","newGame","get","then","result","data","success","console","log","deck_id","i","card1","cards","drawnCard1","value","suit","imageURL","image","cardCode","code","card2","drawnCard2","push","n","catch","error","deal","gameWon","player1","pop","player2","drawWinner","e","user1Score","cardValue","length","user2Score","card","map","index"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport axios from \"axios\";\n\n//User 1 cards\nlet user1_deck = [];\n//User 1 current card drawn\nlet user1_card = [];\n\n//User 2 cards\nlet user2_deck = [];\n//User 2 current card drawn\nlet user2_card =[];\n\nfunction WarGame() {\n\n  const [shuffled, setShuffled] = useState(\"\");\n  // const shuffled = useState(\"\");\n  const [,updateRender] = useState();\n  let currentDeck;\n  void shuffled;\n\n  //Calls new game when the page loads\n  useEffect(() => {\n    newGame();\n  }, []);\n\n  function newGame(){\n\n    user1_deck = [];\n    user1_card = [];\n    user2_deck = [];\n    user2_card = [];\n    //Make API call to retrieve cards for game\n    axios.get(`https://deckofcardsapi.com/api/deck/new/shuffle/?deck_count=1`)\n      .then(result => {\n        result.data.success && console.log(\"Deck obtained\");\n\n        //Shuffle deck\n        setShuffled(result.data.shuffled);\n        //Retrieve deck\n        currentDeck = result.data.deck_id;\n\n        //Clear decks in both users hands\n        user1_deck = [];\n        user2_deck = [];\n\n        //Make API request to evenly split cards between both users\n        axios.get(`https://deckofcardsapi.com/api/deck/${currentDeck}/draw/?count=52`)\n          .then(result => {\n            result.data.success && console.log(\"Deck is split!\")\n\n            let i;\n            for (i = 0; i < 52; i += 2){\n              let card1 = result.data.cards[i];\n              \n              //Card object to display user 1's hand\n              let drawnCard1 = {\n                value: `${card1.value}`,\n                suit: `${card1.suit}`,\n                imageURL: `${card1.image}`,\n                cardCode: `${card1.code}`,\n                imageURL: `${card1.image}`\n              };\n\n              let card2 = result.data.cards[i + 1];\n              //Card object to display user 2's hand\n              let drawnCard2 = {\n                value: `${card2.value}`,\n                suit: `${card2.suit}`,\n                imageURL: `${card2.image}`,\n                cardCode: `${card2.code}`,\n                imageURL: `${card2.image}`\n              };\n\n              user1_deck.push(drawnCard1);\n              user2_deck.push(drawnCard2);\n            }\n            //Pushes new card to the browser\n            updateRender(n => !n);\n          })\n          .catch(error => console.log(error));\n      })\n    .catch(error => console.log(error));\n  }\n\n  function deal() {\n    try {\n      //reset the pile for each player\n      user1_card = [];\n      user2_card = [];\n      if (!gameWon()) {\n        let player1 = user1_deck.pop();\n        let player2 = user2_deck.pop();\n        if (!(player1 === \"undefined\" && player2 === \"undefined\")) {\n          user1_card.push(player1);\n          user2_card.push(player2);\n          updateRender(n => !n);\n          drawWinner();\n        }\n      } else {\n        gameWon();\n        updateRender(n => !n);\n      }\n    } catch (e) {}\n  }\n\n  //Scores for whoever wins round\n  async function drawWinner() {\n    //get player card value\n    let user1Score = cardValue(user1_card[user1_card.length - 1]);\n    //get deal card value\n    let user2Score = cardValue(user2_card[user2_card.length - 1]);\n\n    if (user1Score === user2Score) {\n      //its a tie\n      console.log('Tie')\n    } else if (user1Score > user2Score) {\n      //player wins the flip\n      console.log(\"Player 1 wins this round\");\n    } else {\n      //dealer wins\n      console.log(\"Player 2 wins this round\");\n    }\n  }\n\n  //Create function to specify the value for A, K, Q, J\n  function cardValue(card){\n    try {\n      switch (card.value) {\n        case \"ACE\":\n          return 14;\n        case \"KING\":\n          return 13;\n        case \"QUEEN\":\n          return 12;\n        case \"JACK\":\n          return 11;\n        default:\n          return card.value;\n      }\n    } catch (e) {}\n  }\n\n  //checks if either player has an empty deck\n  function gameWon() {\n    console.log(\"Player 1: \" + user1_deck.length + \" Player 2: \" + user2_deck.length);\n    if (user1_deck.length === 0) {\n      return true;\n    }\n    if (user2_deck.length === 0) {\n      return true;\n    }\n    return false;\n  }\n\n  return (\n    <>\n    <div>\n      <div>\n        <div>\n          <button onClick={deal}>Hit</button>\n          <button onClick={newGame}>\n            New Game\n          </button>\n        </div>\n      </div>\n      <div>\n        <div type=\"player\">\n          <h2>Player 1</h2>\n          {user1_card &&\n            user1_card.map((card, index) => {\n              return (\n                <img\n                  key={`player${index}`}\n                  src={`${card.imageURL}`}\n                  alt={`${card.value} of ${card.suit}`}\n                />\n              );\n            })}\n        </div>\n        <div>\n          <h2>Player 2</h2>\n          {user2_card &&\n            user2_card.map((card, index) => {\n              return (\n                <img\n                  key={`dealer${index}`}\n                  src={`${card.imageURL}`}\n                  alt={`${card.value} of ${card.suit}`}\n                />\n              );\n            })}\n        </div>\n      </div>\n    </div>\n  </>\n  )\n\n}\n\nexport default WarGame;"]},"metadata":{},"sourceType":"module"}